{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natha\\\\Desktop\\\\react-pokedex\\\\react-pokedex\\\\src\\\\components\\\\Info.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { pokemonTypes } from \"../utils\";\nimport { useAppDispatch } from \"../app/hooks\";\nimport { addPokemonToList } from \"../app/reducers/addPokemonToList\";\nimport { setPokemonTab } from \"../app/slices/AppSlice\";\nimport { pokemonTabs } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Info(_ref) {\n  _s();\n  let {\n    data\n  } = _ref;\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    const progressBars = document.querySelectorAll(\"progress\");\n    progressBars.forEach(progressBar => {\n      progressBar.style.width = \"10rem\";\n    });\n  }, []);\n  const createStatsArray = (types, statType) => {\n    const statsSet = new Set();\n    types.forEach(type => {\n      // @ts-ignore\n      pokemonTypes[type][statType].forEach(stat => {\n        if (!statsSet.has(stat)) {\n          statsSet.add(stat[0].toUpperCase() + stat.slice(1));\n        }\n      });\n    });\n    return Array.from(statsSet);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"name\",\n        children: data === null || data === void 0 ? void 0 : data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Type: \", data === null || data === void 0 ? void 0 : data.types.join(\" - \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Evolution: \", data === null || data === void 0 ? void 0 : data.evolutionLevel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(setPokemonTab(pokemonTabs.evolution)),\n        children: \"See next evolution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data === null || data === void 0 ? void 0 : data.stats.map(stat => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [stat.name, \": \", stat.value, /*#__PURE__*/_jsxDEV(\"progress\", {\n              max: 100,\n              value: stat.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, stat.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"battle-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Strengths:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: createStatsArray(data === null || data === void 0 ? void 0 : data.types, \"strength\").join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Weakness:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: createStatsArray(data === null || data === void 0 ? void 0 : data.types, \"weakness\").join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Resistant:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: createStatsArray(data === null || data === void 0 ? void 0 : data.types, \"resistance\").join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Vulnerable:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: createStatsArray(data === null || data === void 0 ? void 0 : data.types, \"vulnerable\").join(\", \")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(addPokemonToList(data)),\n        className: \"add-pokemon\",\n        children: \"Add Pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Info, \"DKdeqxp2QYw2p6z8/ErYMRK/Ubo=\", false, function () {\n  return [useAppDispatch];\n});\n_c = Info;\nvar _c;\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"names":["React","useEffect","pokemonTypes","useAppDispatch","addPokemonToList","setPokemonTab","pokemonTabs","Info","data","dispatch","progressBars","document","querySelectorAll","forEach","progressBar","style","width","createStatsArray","types","statType","statsSet","Set","type","stat","has","add","toUpperCase","slice","Array","from","name","join","evolutionLevel","evolution","stats","map","value"],"sources":["C:/Users/natha/Desktop/react-pokedex/react-pokedex/src/components/Info.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { pokemonTypes } from \"../utils\";\r\nimport { useAppDispatch } from \"../app/hooks\";\r\nimport { addPokemonToList } from \"../app/reducers/addPokemonToList\";\r\nimport { setPokemonTab } from \"../app/slices/AppSlice\";\r\nimport { pokemonTabs } from \"../utils/constants\";\r\nimport { currentPokemonType, pokemonStatsType } from \"../utils/types\";\r\n\r\nexport default function Info({\r\n  data,\r\n}: {\r\n  data: currentPokemonType | undefined;\r\n}) {\r\n  const dispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    const progressBars = document.querySelectorAll(\"progress\");\r\n    progressBars.forEach((progressBar) => {\r\n      progressBar.style.width = \"10rem\";\r\n    });\r\n  }, []);\r\n  const createStatsArray = (types: string[], statType: string) => {\r\n    const statsSet = new Set();\r\n    types.forEach((type: string) => {\r\n      // @ts-ignore\r\n      pokemonTypes[type][statType].forEach((stat: string) => {\r\n        if (!statsSet.has(stat)) {\r\n          statsSet.add(stat[0].toUpperCase() + stat.slice(1));\r\n        }\r\n      });\r\n    });\r\n    return Array.from(statsSet);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"details\">\r\n        <h1 className=\"name\">{data?.name}</h1>\r\n        <h3>Type: {data?.types.join(\" - \")}</h3>\r\n        <h3>Evolution: {data?.evolutionLevel}</h3>\r\n        <button onClick={() => dispatch(setPokemonTab(pokemonTabs.evolution))}>\r\n          See next evolution\r\n        </button>\r\n      </div>\r\n      <div className=\"stats\">\r\n        <ul>\r\n          {data?.stats.map((stat: pokemonStatsType) => {\r\n            return (\r\n              <li key={stat.name}>\r\n                {stat.name}: {stat.value}\r\n                <progress max={100} value={stat.value} />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <div className=\"battle-stats\">\r\n        {\r\n          <ul>\r\n            <li>\r\n              <span>Strengths:</span>\r\n              <span>\r\n                {createStatsArray(\r\n                  data?.types as unknown as string[],\r\n                  \"strength\"\r\n                ).join(\", \")}\r\n              </span>\r\n            </li>\r\n            <li>\r\n              <span>Weakness:</span>\r\n              <span>\r\n                {createStatsArray(\r\n                  data?.types as unknown as string[],\r\n                  \"weakness\"\r\n                ).join(\", \")}\r\n              </span>\r\n            </li>\r\n            <li>\r\n              <span>Resistant:</span>\r\n              <span>\r\n                {createStatsArray(\r\n                  data?.types as unknown as string[],\r\n                  \"resistance\"\r\n                ).join(\", \")}\r\n              </span>\r\n            </li>\r\n            <li>\r\n              <span>Vulnerable:</span>\r\n              <span>\r\n                {createStatsArray(\r\n                  data?.types as unknown as string[],\r\n                  \"vulnerable\"\r\n                ).join(\", \")}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        }\r\n        <button\r\n          onClick={() => dispatch(addPokemonToList(data!))}\r\n          className=\"add-pokemon\"\r\n        >\r\n          Add Pokemon\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}