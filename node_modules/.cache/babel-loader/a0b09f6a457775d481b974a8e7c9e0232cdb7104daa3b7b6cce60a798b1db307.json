{"ast":null,"code":"// @ts-nocheck\n\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { defaultImages, images, pokemonTypes } from \"../../utils\";\nexport const getPokemonsData = createAsyncThunk(\"pokemon/randomPokemon\", async pokemons => {\n  try {\n    const pokemonsData = [];\n    for await (const pokemon of pokemons) {\n      const {\n        data\n      } = await axios.get(pokemon.url);\n      const types = data.types.map(_ref => {\n        let {\n          type: {\n            name\n          }\n        } = _ref;\n        return {\n          [name]: pokemonTypes[name]\n        };\n      });\n      let image = images[data.id];\n      if (!image) {\n        image = defaultImages[data.id];\n      }\n      if (image) {\n        pokemonsData.push({\n          name: pokemon.name,\n          id: data.id,\n          image,\n          types\n        });\n      }\n    }\n    return pokemonsData;\n  } catch (err) {\n    console.error(err);\n  }\n});","map":{"version":3,"names":["createAsyncThunk","axios","defaultImages","images","pokemonTypes","getPokemonsData","pokemons","pokemonsData","pokemon","data","get","url","types","map","type","name","image","id","push","err","console","error"],"sources":["C:/Users/natha/Desktop/react-pokedex/react-pokedex/src/app/reducers/getPokemonsData.ts"],"sourcesContent":["// @ts-nocheck\r\n\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { defaultImages, images, pokemonTypes } from \"../../utils\";\r\nimport { generatedPokemonType, genericPokemonType } from \"../../utils/types\";\r\n\r\nexport const getPokemonsData = createAsyncThunk(\r\n  \"pokemon/randomPokemon\",\r\n  async (pokemons: genericPokemonType[]) => {\r\n    try {\r\n      const pokemonsData: generatedPokemonType[] = [];\r\n      for await (const pokemon of pokemons) {\r\n        const {\r\n          data,\r\n        }: {\r\n          data: {\r\n            id: number;\r\n            types: { type: genericPokemonType }[];\r\n          };\r\n        } = await axios.get(pokemon.url);\r\n        const types = data.types.map(\r\n          ({ type: { name } }: { type: { name: string } }) => ({\r\n            [name]: pokemonTypes[name],\r\n          })\r\n        );\r\n        let image: string = images[data.id];\r\n        if (!image) {\r\n          image = defaultImages[data.id];\r\n        }\r\n        if (image) {\r\n          pokemonsData.push({\r\n            name: pokemon.name,\r\n            id: data.id,\r\n            image,\r\n            types,\r\n          });\r\n        }\r\n      }\r\n      return pokemonsData;\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n);\r\n"],"mappings":"AAAA;;AAEA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,MAAM,EAAEC,YAAY,QAAQ,aAAa;AAGjE,OAAO,MAAMC,eAAe,GAAGL,gBAAgB,CAC7C,uBAAuB,EACvB,MAAOM,QAA8B,IAAK;EACxC,IAAI;IACF,MAAMC,YAAoC,GAAG,EAAE;IAC/C,WAAW,MAAMC,OAAO,IAAIF,QAAQ,EAAE;MACpC,MAAM;QACJG;MAMF,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC;MAChC,MAAMC,KAAK,GAAGH,IAAI,CAACG,KAAK,CAACC,GAAG,CAC1B;QAAA,IAAC;UAAEC,IAAI,EAAE;YAAEC;UAAK;QAA8B,CAAC;QAAA,OAAM;UACnD,CAACA,IAAI,GAAGX,YAAY,CAACW,IAAI;QAC3B,CAAC;MAAA,CAAC,CACH;MACD,IAAIC,KAAa,GAAGb,MAAM,CAACM,IAAI,CAACQ,EAAE,CAAC;MACnC,IAAI,CAACD,KAAK,EAAE;QACVA,KAAK,GAAGd,aAAa,CAACO,IAAI,CAACQ,EAAE,CAAC;MAChC;MACA,IAAID,KAAK,EAAE;QACTT,YAAY,CAACW,IAAI,CAAC;UAChBH,IAAI,EAAEP,OAAO,CAACO,IAAI;UAClBE,EAAE,EAAER,IAAI,CAACQ,EAAE;UACXD,KAAK;UACLJ;QACF,CAAC,CAAC;MACJ;IACF;IACA,OAAOL,YAAY;EACrB,CAAC,CAAC,OAAOY,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACpB;AACF,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}