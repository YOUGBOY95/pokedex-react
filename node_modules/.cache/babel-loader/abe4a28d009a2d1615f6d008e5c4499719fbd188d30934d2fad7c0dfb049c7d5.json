{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getInitialPokemonData } from \"../reducers/getInitialPokemonData\";\nimport { getPokemonsData } from \"../reducers/getPokemonsData\";\nimport { getUserPokemons } from \"../reducers/getUserPokemons\";\nimport { removePokemonFromUserList } from \"../reducers/removePokemonFromUserList\";\nconst initialState = {\n  allPokemon: undefined,\n  randomPokemons: undefined,\n  compareQueue: [],\n  userPokemons: [],\n  currentPokemon: undefined\n};\nexport const PokemonSlice = createSlice({\n  name: \"pokemon\",\n  initialState,\n  reducers: {\n    addToCompare: (state, action) => {\n      const index = state.compareQueue.findIndex(pokemon => pokemon.id === action.payload.id);\n      if (index === -1) {\n        if (state.compareQueue.length === 2) {\n          state.compareQueue.pop();\n        }\n        state.compareQueue.unshift(action.payload);\n      }\n    },\n    removeFromCompare: (state, action) => {\n      const index = state.compareQueue.findIndex(pokemon => pokemon.id === action.payload.id);\n      const queue = [...state.compareQueue];\n      queue.splice(index, 1);\n      state.compareQueue = queue;\n    },\n    setCurrentPokemon: (state, action) => {\n      state.currentPokemon = action.payload;\n    },\n    resetRandomPokemons: state => {\n      state.randomPokemons = undefined;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getInitialPokemonData.fulfilled, (state, action) => {\n      state.allPokemon = action.payload;\n    });\n    builder.addCase(getPokemonsData.fulfilled, (state, action) => {\n      state.randomPokemons = action.payload;\n    });\n    builder.addCase(getUserPokemons.fulfilled, (state, action) => {\n      state.userPokemons = action.payload;\n    });\n    builder.addCase(removePokemonFromUserList.fulfilled, (state, action) => {\n      const userPokemons = [...state.userPokemons];\n      const index = userPokemons.findIndex(pokemon => {\n        var _action$payload;\n        return pokemon.firebaseId === ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.id);\n      });\n      userPokemons.splice(index, 1);\n      state.userPokemons = userPokemons;\n    });\n  }\n});\nexport const {\n  addToCompare,\n  removeFromCompare,\n  setCurrentPokemon,\n  resetRandomPokemons\n} = PokemonSlice.actions;","map":{"version":3,"names":["createSlice","getInitialPokemonData","getPokemonsData","getUserPokemons","removePokemonFromUserList","initialState","allPokemon","undefined","randomPokemons","compareQueue","userPokemons","currentPokemon","PokemonSlice","name","reducers","addToCompare","state","action","index","findIndex","pokemon","id","payload","length","pop","unshift","removeFromCompare","queue","splice","setCurrentPokemon","resetRandomPokemons","extraReducers","builder","addCase","fulfilled","firebaseId","actions"],"sources":["C:/Users/natha/Desktop/react-pokedex/react-pokedex/src/app/slices/PokemonSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getInitialPokemonData } from \"../reducers/getInitialPokemonData\";\r\nimport { getPokemonsData } from \"../reducers/getPokemonsData\";\r\nimport { getUserPokemons } from \"../reducers/getUserPokemons\";\r\nimport { removePokemonFromUserList } from \"../reducers/removePokemonFromUserList\";\r\nimport {\r\n  PokemonInitialStateType,\r\n  generatedPokemonType,\r\n} from \"../../utils/types\";\r\n\r\nconst initialState: PokemonInitialStateType = {\r\n  allPokemon: undefined,\r\n  randomPokemons: undefined,\r\n  compareQueue: [],\r\n  userPokemons: [],\r\n  currentPokemon: undefined,\r\n};\r\n\r\nexport const PokemonSlice = createSlice({\r\n  name: \"pokemon\",\r\n  initialState,\r\n  reducers: {\r\n    addToCompare: (state, action) => {\r\n      const index = state.compareQueue.findIndex(\r\n        (pokemon: generatedPokemonType) => pokemon.id === action.payload.id\r\n      );\r\n      if (index === -1) {\r\n        if (state.compareQueue.length === 2) {\r\n          state.compareQueue.pop();\r\n        }\r\n        state.compareQueue.unshift(action.payload);\r\n      }\r\n    },\r\n    removeFromCompare: (state, action) => {\r\n      const index = state.compareQueue.findIndex(\r\n        (pokemon: generatedPokemonType) => pokemon.id === action.payload.id\r\n      );\r\n      const queue = [...state.compareQueue];\r\n      queue.splice(index, 1);\r\n      state.compareQueue = queue;\r\n    },\r\n    setCurrentPokemon: (state, action) => {\r\n      state.currentPokemon = action.payload;\r\n    },\r\n    resetRandomPokemons: (state) => {\r\n      state.randomPokemons = undefined;\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getInitialPokemonData.fulfilled, (state, action) => {\r\n      state.allPokemon = action.payload;\r\n    });\r\n    builder.addCase(getPokemonsData.fulfilled, (state, action) => {\r\n      state.randomPokemons = action.payload;\r\n    });\r\n    builder.addCase(getUserPokemons.fulfilled, (state, action) => {\r\n      state.userPokemons = action.payload!;\r\n    });\r\n    builder.addCase(removePokemonFromUserList.fulfilled, (state, action) => {\r\n      const userPokemons = [...state.userPokemons];\r\n      const index = userPokemons.findIndex(\r\n        (pokemon) => pokemon.firebaseId === action.payload?.id\r\n      );\r\n      userPokemons.splice(index, 1);\r\n      state.userPokemons = userPokemons;\r\n    });\r\n  },\r\n});\r\n\r\nexport const {\r\n  addToCompare,\r\n  removeFromCompare,\r\n  setCurrentPokemon,\r\n  resetRandomPokemons,\r\n} = PokemonSlice.actions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}