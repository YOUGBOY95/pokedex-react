{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natha\\\\Desktop\\\\react-pokedex\\\\react-pokedex\\\\src\\\\pages\\\\Search.tsx\",\n  _s = $RefreshSig$();\n// @ts-nocheck\n\nimport React, { useEffect } from \"react\";\nimport Wrapper from \"../sections/Wrapper\";\nimport { debounce } from \"../utils\";\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\nimport { getInitialPokemonData } from \"../app/reducers/getInitialPokemonData\";\nimport { getPokemonsData } from \"../app/reducers/getPokemonsData\";\nimport Loader from \"../components/Loader\";\nimport { setLoading } from \"../app/slices/AppSlice\";\nimport PokemonCardGrid from \"../components/PokemonCardGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const handleChange = debounce(value => getPokemon(value), 300);\n  const isLoading = useAppSelector(_ref => {\n    let {\n      app: {\n        isLoading\n      }\n    } = _ref;\n    return isLoading;\n  });\n  const dispatch = useAppDispatch();\n  const {\n    allPokemon,\n    randomPokemons\n  } = useAppSelector(_ref2 => {\n    let {\n      pokemon\n    } = _ref2;\n    return pokemon;\n  });\n  useEffect(() => {\n    dispatch(getInitialPokemonData());\n  }, [dispatch]);\n  useEffect(() => {\n    if (allPokemon) {\n      const clonedPokemons = [...allPokemon];\n      const randomPokemonsId = clonedPokemons.sort(() => Math.random() - Math.random()).slice(0, 20);\n      dispatch(getPokemonsData(randomPokemonsId));\n    }\n  }, [allPokemon, dispatch]);\n  useEffect(() => {\n    if (randomPokemons) {\n      dispatch(setLoading(false));\n    }\n  }, [randomPokemons, dispatch]);\n  const getPokemon = async value => {\n    if (value.length) {\n      const pokemons = allPokemon.filter(pokemon => pokemon.name.includes(value.toLowerCase()));\n      dispatch(getPokemonsData(pokemons));\n    } else {\n      const clonedPokemons = [...allPokemon];\n      const randomPokemonsId = clonedPokemons.sort(() => Math.random() - Math.random()).slice(0, 20);\n      dispatch(getPokemonsData(randomPokemonsId));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => handleChange(e.target.value),\n        className: \"pokemon-searchbar\",\n        placeholder: \"Search Pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PokemonCardGrid, {\n        pokemons: randomPokemons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Search, \"Qy/+IFP+DxNlHLz1Z/nsq59Vglk=\", false, function () {\n  return [useAppSelector, useAppDispatch, useAppSelector];\n});\n_c = Search;\nexport default _c2 = Wrapper(Search);\nvar _c, _c2;\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","Wrapper","debounce","useAppDispatch","useAppSelector","getInitialPokemonData","getPokemonsData","Loader","setLoading","PokemonCardGrid","Search","handleChange","value","getPokemon","isLoading","app","dispatch","allPokemon","randomPokemons","pokemon","clonedPokemons","randomPokemonsId","sort","Math","random","slice","length","pokemons","filter","name","includes","toLowerCase","e","target"],"sources":["C:/Users/natha/Desktop/react-pokedex/react-pokedex/src/pages/Search.tsx"],"sourcesContent":["// @ts-nocheck\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport Wrapper from \"../sections/Wrapper\";\r\nimport { debounce } from \"../utils\";\r\nimport { useAppDispatch, useAppSelector } from \"../app/hooks\";\r\nimport { getInitialPokemonData } from \"../app/reducers/getInitialPokemonData\";\r\nimport { getPokemonsData } from \"../app/reducers/getPokemonsData\";\r\nimport Loader from \"../components/Loader\";\r\nimport { setLoading } from \"../app/slices/AppSlice\";\r\n\r\nimport PokemonCardGrid from \"../components/PokemonCardGrid\";\r\n\r\nfunction Search() {\r\n  const handleChange = debounce((value: string) => getPokemon(value), 300);\r\n  const isLoading = useAppSelector(({ app: { isLoading } }) => isLoading);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const { allPokemon, randomPokemons } = useAppSelector(\r\n    ({ pokemon }) => pokemon\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getInitialPokemonData());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (allPokemon) {\r\n      const clonedPokemons = [...allPokemon];\r\n      const randomPokemonsId = clonedPokemons\r\n        .sort(() => Math.random() - Math.random())\r\n        .slice(0, 20);\r\n      dispatch(getPokemonsData(randomPokemonsId));\r\n    }\r\n  }, [allPokemon, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (randomPokemons) {\r\n      dispatch(setLoading(false));\r\n    }\r\n  }, [randomPokemons, dispatch]);\r\n\r\n  const getPokemon = async (value: string) => {\r\n    if (value.length) {\r\n      const pokemons = allPokemon.filter((pokemon) =>\r\n        pokemon.name.includes(value.toLowerCase())\r\n      );\r\n      dispatch(getPokemonsData(pokemons));\r\n    } else {\r\n      const clonedPokemons = [...allPokemon];\r\n      const randomPokemonsId = clonedPokemons\r\n        .sort(() => Math.random() - Math.random())\r\n        .slice(0, 20);\r\n      dispatch(getPokemonsData(randomPokemonsId));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => handleChange(e.target.value)}\r\n            className=\"pokemon-searchbar\"\r\n            placeholder=\"Search Pokemon\"\r\n          />\r\n          <PokemonCardGrid pokemons={randomPokemons} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Wrapper(Search);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}