{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { addDoc } from \"firebase/firestore\";\nimport { pokemonListRef } from \"../../utils/firebaseConfig\";\nimport { getUserPokemons } from \"./getUserPokemons\";\nimport { setToast } from \"../slices/AppSlice\";\nexport const addPokemonToList = createAsyncThunk(\"pokemon/addPkemon\", async (pokemon, _ref) => {\n  let {\n    getState,\n    dispatch\n  } = _ref;\n  try {\n    const {\n      app: {\n        userInfo\n      },\n      pokemon: {\n        userPokemons\n      }\n    } = getState();\n    if (!(userInfo !== null && userInfo !== void 0 && userInfo.email)) {\n      return dispatch(setToast(\"Please login in order to add pokemon to your collection.\"));\n    }\n    const index = userPokemons.findIndex(userPokemon => {\n      return userPokemon.name === pokemon.name;\n    });\n    if (index === -1) {\n      let types = [];\n      if (!pokemon.stats) {\n        pokemon.types.forEach(type => types.push(Object.keys(type).toString()));\n      } else {\n        types = pokemon.types;\n      }\n      await addDoc(pokemonListRef, {\n        pokemon: {\n          id: pokemon.id,\n          name: pokemon.name,\n          types\n        },\n        email: userInfo.email\n      });\n      await dispatch(getUserPokemons());\n      dispatch(setToast(`${pokemon.name} added to your collection.`));\n    } else {\n      dispatch(setToast(`${pokemon.name} already part of your collection.`));\n    }\n  } catch (err) {\n    console.log({\n      err\n    });\n  }\n});","map":{"version":3,"names":["createAsyncThunk","addDoc","pokemonListRef","getUserPokemons","setToast","addPokemonToList","pokemon","getState","dispatch","app","userInfo","userPokemons","email","index","findIndex","userPokemon","name","types","stats","forEach","type","push","Object","keys","toString","id","err","console","log"],"sources":["C:/Users/natha/Desktop/react-pokedex/react-pokedex/src/app/reducers/addPokemonToList.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { addDoc } from \"firebase/firestore\";\r\nimport { pokemonListRef } from \"../../utils/firebaseConfig\";\r\nimport { getUserPokemons } from \"./getUserPokemons\";\r\nimport { setToast } from \"../slices/AppSlice\";\r\nimport {\r\n  pokemonStatsType,\r\n  pokemonTypeInterface,\r\n  userPokemonsType,\r\n} from \"../../utils/types\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport const addPokemonToList = createAsyncThunk(\r\n  \"pokemon/addPkemon\",\r\n  async (\r\n    pokemon: {\r\n      id: number;\r\n      name: string;\r\n      types: pokemonTypeInterface[] | string[];\r\n      stats?: pokemonStatsType[];\r\n    },\r\n    { getState, dispatch }\r\n  ) => {\r\n    try {\r\n      const {\r\n        app: { userInfo },\r\n        pokemon: { userPokemons },\r\n      } = getState() as RootState;\r\n      if (!userInfo?.email) {\r\n        return dispatch(\r\n          setToast(\"Please login in order to add pokemon to your collection.\")\r\n        );\r\n      }\r\n      const index = userPokemons.findIndex((userPokemon: userPokemonsType) => {\r\n        return userPokemon.name === pokemon.name;\r\n      });\r\n      if (index === -1) {\r\n        let types: string[] = [];\r\n        if (!pokemon.stats) {\r\n          pokemon.types.forEach((type: any) =>\r\n            types.push(Object.keys(type).toString())\r\n          );\r\n        } else {\r\n          types = pokemon.types as string[];\r\n        }\r\n        await addDoc(pokemonListRef, {\r\n          pokemon: { id: pokemon.id, name: pokemon.name, types },\r\n          email: userInfo.email,\r\n        });\r\n        await dispatch(getUserPokemons());\r\n        dispatch(setToast(`${pokemon.name} added to your collection.`));\r\n      } else {\r\n        dispatch(setToast(`${pokemon.name} already part of your collection.`));\r\n      }\r\n    } catch (err) {\r\n      console.log({ err });\r\n    }\r\n  }\r\n);\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,QAAQ,QAAQ,oBAAoB;AAQ7C,OAAO,MAAMC,gBAAgB,GAAGL,gBAAgB,CAC9C,mBAAmB,EACnB,OACEM,OAKC,WAEE;EAAA,IADH;IAAEC,QAAQ;IAAEC;EAAS,CAAC;EAEtB,IAAI;IACF,MAAM;MACJC,GAAG,EAAE;QAAEC;MAAS,CAAC;MACjBJ,OAAO,EAAE;QAAEK;MAAa;IAC1B,CAAC,GAAGJ,QAAQ,EAAe;IAC3B,IAAI,EAACG,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEE,KAAK,GAAE;MACpB,OAAOJ,QAAQ,CACbJ,QAAQ,CAAC,0DAA0D,CAAC,CACrE;IACH;IACA,MAAMS,KAAK,GAAGF,YAAY,CAACG,SAAS,CAAEC,WAA6B,IAAK;MACtE,OAAOA,WAAW,CAACC,IAAI,KAAKV,OAAO,CAACU,IAAI;IAC1C,CAAC,CAAC;IACF,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAII,KAAe,GAAG,EAAE;MACxB,IAAI,CAACX,OAAO,CAACY,KAAK,EAAE;QAClBZ,OAAO,CAACW,KAAK,CAACE,OAAO,CAAEC,IAAS,IAC9BH,KAAK,CAACI,IAAI,CAACC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,QAAQ,EAAE,CAAC,CACzC;MACH,CAAC,MAAM;QACLP,KAAK,GAAGX,OAAO,CAACW,KAAiB;MACnC;MACA,MAAMhB,MAAM,CAACC,cAAc,EAAE;QAC3BI,OAAO,EAAE;UAAEmB,EAAE,EAAEnB,OAAO,CAACmB,EAAE;UAAET,IAAI,EAAEV,OAAO,CAACU,IAAI;UAAEC;QAAM,CAAC;QACtDL,KAAK,EAAEF,QAAQ,CAACE;MAClB,CAAC,CAAC;MACF,MAAMJ,QAAQ,CAACL,eAAe,EAAE,CAAC;MACjCK,QAAQ,CAACJ,QAAQ,CAAE,GAAEE,OAAO,CAACU,IAAK,4BAA2B,CAAC,CAAC;IACjE,CAAC,MAAM;MACLR,QAAQ,CAACJ,QAAQ,CAAE,GAAEE,OAAO,CAACU,IAAK,mCAAkC,CAAC,CAAC;IACxE;EACF,CAAC,CAAC,OAAOU,GAAG,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC;MAAEF;IAAI,CAAC,CAAC;EACtB;AACF,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}